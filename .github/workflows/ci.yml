name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

permissions:
  contents: read

jobs:
  validate-version:
    name: Validate Version Consistency
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Check version consistency
      run: |
        # Get version from pyproject.toml
        PYPROJECT_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])" 2>/dev/null || python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")
        
        # Get version from __init__.py
        INIT_VERSION=$(python -c "import sys; sys.path.insert(0, '.'); import mcp_code_editor; print(mcp_code_editor.__version__)")
        
        echo "üì¶ pyproject.toml version: $PYPROJECT_VERSION"
        echo "üêç __init__.py version: $INIT_VERSION"
        
        if [ "$PYPROJECT_VERSION" = "$INIT_VERSION" ]; then
          echo "‚úÖ All versions are consistent: $PYPROJECT_VERSION"
        else
          echo "‚ùå Version mismatch detected!"
          echo "  pyproject.toml: $PYPROJECT_VERSION"
          echo "  __init__.py: $INIT_VERSION"
          exit 1
        fi
